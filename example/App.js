/**
 * Sample React Native App
 *
 * adapted from App.js generated by the following command:
 *
 * react-native init example
 *
 * https://github.com/facebook/react-native
 */

import React, {
  Component,
  useState,
  useCallback,
  useEffect,
  useMemo,
} from 'react';
import {StyleSheet, Text, View, Alert} from 'react-native';
import {
  connect,
  publish,
  subscribe,
  checkBluetoothPermission,
  checkBluetoothAvailability,
  useNearbyErrorCallback,
  disconnect,
} from 'react-native-google-nearby-messages';
import {getDeviceName} from 'react-native-device-info';

const API_KEY = '<yourapikey>';

export default function App() {
  const [nearbyMessage, setNearbyMessage] = useState('');

  useNearbyErrorCallback(
    useCallback((kind, message) => {
      Alert.alert(kind, message);
    }, []),
  );

  const _connect = useCallback(async () => {
    console.log('Connecting...');
    await connect({
      apiKey: API_KEY,
      discoveryModes: ['broadcast'],
      discoveryMediums: ['ble'],
    });
    console.log('Connected!');
    return () => disconnect();
  }, []);
  const _publish = useCallback(async () => {
    const deviceName = await getDeviceName();
    console.log(`Publishing "${deviceName}"...`);
    await publish(deviceName);
    console.log(`Published "${deviceName}"!`);
  }, []);
  const _subscribe = useCallback(async () => {
    console.log('Subscribing...');
    await subscribe(
      (m) => {
        setNearbyMessage(m);
        console.log(`Found: ${JSON.stringify(m)}`);
      },
      (m) => {
        setNearbyMessage('');
        console.log(`Lost: ${JSON.stringify(m)}`);
      },
    );
    console.log('Subscribed!');
  }, []);
  const _checkPermissions = useCallback(async () => {
    const permission = await checkBluetoothPermission();
    const available = await checkBluetoothAvailability();
    Alert.alert(
      'Bluetooth Permissions:',
      `Granted: ${permission}, Available: ${available}`,
    );
  }, []);

  useEffect(() => {
    _connect();

    _checkPermissions();
    _subscribe();
    _publish();

    return () => disconnect();
  }, [_connect, _subscribe, _publish, _checkPermissions]);

  return (
    <View style={styles.container}>
      <Text style={styles.welcome}>☆GoogleNearbyMessages example☆</Text>
      <Text style={styles.welcome}>Nearby Message:</Text>
      <Text style={styles.instructions}>{nearbyMessage}</Text>
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#F5FCFF',
  },
  welcome: {
    fontSize: 20,
    textAlign: 'center',
    margin: 10,
  },
  instructions: {
    textAlign: 'center',
    color: '#333333',
    marginBottom: 5,
  },
});
